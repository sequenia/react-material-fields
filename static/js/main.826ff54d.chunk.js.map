{"version":3,"sources":["../../src/checkbox.js","../../src/constants.js","../../src/hocs/with_helper_text.js","../../src/hocs/with_guid.js","../../src/date_time_field.js","../../src/text_field.js","../../src/decimal_field.js","../../src/hocs/with_auto_deletion.js","../../src/buttons/button.js","../../src/buttons/constants.js","../../src/buttons/upload_button.js","../../src/file_field.js","../../src/image_field.js","../../src/base_select_field.js","../../src/resources/icons/ic_check_mark.js","../../src/select_field.js","../../src/remote_select_field.js","../../src/phone_field.js","../../src/resources/icons/ic_opened_eye.js","../../src/resources/icons/ic_closed_eye.js","../../src/password_field.js","App.js","index.js"],"names":["constructor","this","state","checked","nextState","onChange","event","className","placement","clsx","classes","control","name","label","value","labelPlacement","propsChecked","props","defaultChecked","stateChecked","React","Checkbox","PropTypes","displayName","node","withStyles","theme","root","fontSize","lineHeight","fontWeight","WithHelperText","Component","required","descriptionComponentFunc","errorMessage","error","hasError","descriptionText","errors","errorsText","err","WithGuid","uuidv4","guid","moment","nextProps","readOnly","defaultSeconds","newDateIsValid","newDate","newValue","DateTimePicker","maxDate","displayNamePosition","htmlFor","utils","locale","withTime","id","fullWidth","disableAutoComplete","inputVariant","format","disabled","minDate","propsValue","defaultValue","serverDateTimeFormat","dateValue","variant","utcOffset","serverDateFormat","string","underline","compose","capitalization","onBlur","inputProps","placeholder","inputRef","ref","InputProps","type","multiline","rows","stateValue","TextField","propsPrior","bool","other","thousandSeparator","result","floatValue","maxReal","scale","real","frac","Array","newVal","inputComponent","prefix","suffix","precision","decimalSeparator","parseInt","DecimalField","number","WithAutoDeletion","onAutoDelete","timeLeft","autoDeleteTimeout","setInterval","setTimeout","clearInterval","undefined","timeLeftToDeleteText","launchCountdown","allowAutoDeleteOnError","func","ariaHaspopup","children","additionalClasses","component","startIcon","onClick","aria-controls","aria-haspopup","Button","labelClass","ariaControls","styledButton","multiple","accept","UploadButton","text","input","display","button","padding","backgroundColor","file","local","uploading","uploadedFile","prevState","deleteText","buttons","hasErrors","allowSelfLoad","key","allowDelete","onDeleteClick","title","subtitle","href","target","rel","link","progress","errorMessages","map","errorText","JSON","Boolean","FileField","uploader","flexDirection","alignItems","justifyContent","position","loadingRoot","height","color","marginBottom","textTransform","left","top","transform","fade","opacity","delete","borderColor","wordBreak","flexGrow","image","subheader","fileHeader","mediaContainer","medium","getErrorMessages","ImageField","object","notUploadedText","uploadingText","minHeight","media","isOpen","clearItem","menuItem","allowClear","shrink","labelId","renderValue","renderedValue","displayEmpty","MenuProps","onEnter","onExit","onOpen","BaseSelectField","viewBox","d","fill","width","processValue","val","availableValues","optionValues","options","rawValue","checkMark","data","item","enumValue","values","emptyValue","SelectField","maxWidth","marginLeft","displayValue","overflow","whiteSpace","textOverflow","withTheme","query","clearTimeout","valueId","primaryKey","itemId","valId","valueIds","downloader","loading","list","option","newOptions","valuesArray","index","items","aria-disabled","searchKey","selectedValueIds","length","RemoteSelectField","sendQueryTimeout","optionKey","optionDisplayName","textFieldContainer","mask","PhoneField","passwordShowing","disableShowPassword","container","onEyeClicked","PasswordField","withEye","paddingRight","eye","right","App","selectData","Grid","spacing","md","autocomplete","first_name","last_name","console","log","searchQuery","params","url","URL","Object","keys","forEach","searchParams","append","encodeURIComponent","fetch","then","response","json","Promise","resolve","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.826ff54d.chunk.js","sourcesContent":["// https://material-ui.com/ru/api/checkbox/\n\nimport React from 'react'\nimport clsx from 'clsx'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/styles'\nimport {\n  Checkbox as MaterialCheckbox,\n  FormControlLabel\n} from '@material-ui/core'\n\nimport {\n  CheckboxLabelPlacementStart,\n  CheckboxLabelPlacementEnd\n} from './constants.js'\n\nconst styles = (theme) => ({\n  root: {\n    '& .MuiFormControlLabel-label': {\n      fontSize: '14px',\n      '@media (max-width: 768px)': {\n        fontSize: '13px',\n        lineHeight: '16px',\n        fontWeight: '400'\n      }\n    }\n  }\n})\n\nclass Checkbox extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {}\n\n    this.onChange = this.onChange.bind(this)\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    let checked\n\n    const propsChecked = props.checked\n    let defaultChecked = state.defaultChecked\n    const stateChecked = state.checked\n\n    if (defaultChecked !== propsChecked) {\n      defaultChecked = propsChecked\n      checked = propsChecked\n    } else {\n      checked = stateChecked\n    }\n\n    return {\n      checked: checked,\n      defaultChecked: defaultChecked\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return this.state.checked !== nextState.checked\n  }\n\n  onChange(event) {\n    const { onChange } = this.props\n    const checked = event.target.checked\n    this.setState({\n      checked: checked\n    })\n\n    if (onChange) {\n      onChange(checked)\n    }\n  }\n\n  render() {\n    const { classes, className } = this.props\n\n    const { name, displayName, placement } = this.props\n\n    const { checked } = this.state\n\n    return (\n      <FormControlLabel\n        className={clsx(classes.root, className)}\n        control={\n          <MaterialCheckbox\n            onChange={this.onChange}\n            checked={checked}\n            name={name}\n          />\n        }\n        label={displayName}\n        value={name}\n        labelPlacement={placement}\n      />\n    )\n  }\n\n  helperText() {\n    return ''\n  }\n}\n\nCheckbox.propTypes = {\n  checked: PropTypes.bool.isRequired,\n  placement: PropTypes.oneOf([\n    CheckboxLabelPlacementStart,\n    CheckboxLabelPlacementEnd\n  ]),\n  displayName: PropTypes.node\n}\n\nCheckbox.defaultProps = {\n  checked: false,\n  placement: CheckboxLabelPlacementEnd\n}\n\nexport default withStyles(styles)(Checkbox)\n","export const InputVariantStandard = 'standard'\nexport const InputVariantOutlined = 'outlined'\nexport const InputVariantFilled = 'filled'\n\nexport const InputLabelDisplayModeInside = 'inside'\nexport const InputLabelDisplayModeAbove = 'above'\n\nexport const TextFieldTypeText = 'text'\nexport const TextFieldTypeEmail = 'email'\nexport const TextFieldTypeNumber = 'number'\nexport const TextFieldTypePhone = 'tel'\n\nexport const CheckboxLabelPlacementStart = 'start'\nexport const CheckboxLabelPlacementEnd = 'end'\n\nexport const ClearItemValue = '_all'\n\nexport const TextFieldCapitalizationNone = 'none'\nexport const TextFieldCapitalizationCapitalize = 'capitalize'\nexport const TextFieldCapitalizationUppercase = 'uppercase'\nexport const TextFieldCapitalizationLowercase = 'lowercase'\n","import React from 'react'\nimport { FormHelperText } from '@material-ui/core'\n\nconst WithHelperText = (Component) => {\n  class WithHelperText extends React.Component {\n    constructor(props) {\n      super(props)\n\n      this.helperText = this.helperText.bind(this)\n\n      this.state = {}\n    }\n\n    static getDerivedStateFromProps(props, state) {\n      const {\n        errors = [],\n        descriptionText,\n        descriptionComponentFunc,\n        required,\n        displayName\n      } = props\n      const errorsText = errors.filter((err) => {\n        return typeof err === 'string'\n      })\n      return {\n        errorMessage: errorsText.length > 0 ? errorsText.join(', ') : undefined,\n        descriptionText: descriptionText,\n        descriptionComponentFunc: descriptionComponentFunc,\n        hasError: errorsText.length > 0 || props.hasError,\n        displayName: displayName,\n        required: required\n      }\n    }\n\n    displayName() {\n      const { required, displayName } = this.state\n\n      if (displayName === undefined) {\n        return undefined\n      }\n\n      return `${displayName}${required ? ' *' : ''}`\n    }\n\n    helperText() {\n      const {\n        hasError,\n        errorMessage,\n        descriptionText,\n        descriptionComponentFunc\n      } = this.state\n      return (\n        <React.Fragment>\n          {errorMessage && (\n            <FormHelperText error={hasError}>{errorMessage}</FormHelperText>\n          )}\n          {descriptionText &&\n            descriptionComponentFunc &&\n            descriptionComponentFunc(descriptionText)}\n          {descriptionText && !descriptionComponentFunc && (\n            <FormHelperText>{descriptionText}</FormHelperText>\n          )}\n        </React.Fragment>\n      )\n    }\n\n    render() {\n      const { hasError } = this.state\n      return (\n        <React.Fragment>\n          <Component\n            {...this.props}\n            hasError={hasError}\n            displayName={this.displayName()}\n          />\n          {this.helperText()}\n        </React.Fragment>\n      )\n    }\n  }\n\n  return WithHelperText\n}\n\nexport default WithHelperText\n","import React from 'react'\nimport uuidv4 from 'uuid/v4'\n\nconst WithGuid = (Component) => {\n  class WithGuid extends React.Component {\n    constructor(props) {\n      super(props)\n\n      this.guid = uuidv4()\n    }\n\n    render() {\n      return <Component {...this.props} guid={this.guid} />\n    }\n  }\n\n  return WithGuid\n}\n\nexport default WithGuid\n","// https://material-ui-pickers.dev/\n\nimport React from 'react'\nimport clsx from 'clsx'\nimport PropTypes from 'prop-types'\n\nimport { FormLabel } from '@material-ui/core'\n\nimport { compose } from 'recompose'\nimport { withStyles } from '@material-ui/styles'\nimport withHelperText from './hocs/with_helper_text.js'\nimport withGuid from './hocs/with_guid.js'\n\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from '@material-ui/pickers'\nimport MomentUtils from '@date-io/moment'\nimport moment from 'moment'\n\nimport {\n  InputVariantStandard,\n  InputVariantOutlined,\n  InputVariantFilled,\n  InputLabelDisplayModeInside,\n  InputLabelDisplayModeAbove\n} from './constants.js'\n\nconst styles = (theme) => ({})\n\nclass DateTimePicker extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {}\n\n    this.onChange = this.onChange.bind(this)\n    moment.locale(this.props.locale)\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    let value\n\n    const { value: propsValue = null } = props\n    let { defaultValue, value: stateValue = null } = state\n\n    if ((!defaultValue && propsValue) || defaultValue !== propsValue) {\n      defaultValue = propsValue\n      value = propsValue\n    } else {\n      value = stateValue\n    }\n\n    return {\n      value: value,\n      defaultValue: defaultValue\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      this.state.value !== nextState.value ||\n      this.props.displayName !== nextProps.displayName ||\n      this.props.hasError !== nextProps.hasError ||\n      this.props.readOnly !== nextProps.readOnly\n    )\n  }\n\n  onChange(newDate) {\n    const { value } = this.state\n\n    const { onChange } = this.props\n\n    const { defaultHours, defaultMinutes, defaultSeconds } = this.props\n\n    const newDateIsValid = newDate && newDate.isValid()\n\n    if (!value && newDateIsValid) {\n      if (defaultHours) {\n        newDate = newDate.hours(defaultHours)\n      }\n      if (defaultMinutes) {\n        newDate = newDate.minutes(defaultMinutes)\n      }\n      if (defaultSeconds) {\n        newDate = newDate.seconds(defaultSeconds)\n      }\n    }\n\n    const newValue = newDateIsValid\n      ? DateTimePicker.subtractOffset(newDate, this.props)\n      : newDate\n    this.setState({\n      value: newValue\n    })\n\n    if (onChange && newDateIsValid) {\n      onChange(newValue)\n    }\n  }\n\n  render() {\n    const { classes, className, guid, readOnly } = this.props\n\n    const {\n      name,\n      displayName,\n      locale,\n      variant,\n      format,\n      withTime,\n      displayNamePosition,\n      hasError,\n      disableAutoComplete,\n      minDate,\n      maxDate\n    } = this.props\n\n    const { value } = this.state\n\n    return (\n      <React.Fragment>\n        {displayNamePosition === InputLabelDisplayModeAbove && (\n          <FormLabel htmlFor={guid} error={hasError}>\n            {`${displayName}:`}\n          </FormLabel>\n        )}\n        <MuiPickersUtilsProvider utils={MomentUtils} locale={locale}>\n          {!withTime && (\n            <KeyboardDatePicker\n              className={clsx(classes.root, className)}\n              id={guid}\n              fullWidth\n              onChange={this.onChange}\n              value={DateTimePicker.addOffset(value, this.props)}\n              name={disableAutoComplete ? guid : name}\n              error={hasError}\n              label={\n                displayNamePosition === InputLabelDisplayModeInside\n                  ? displayName\n                  : undefined\n              }\n              inputVariant={variant}\n              format={format}\n              disabled={readOnly}\n              minDate={minDate}\n              maxDate={maxDate}\n              // invalidDateMessage={I18n.t(\n              //   'component.date_time_field.invalid_date'\n              // )}\n              // maxDateMessage={I18n.t('component.date_time_field.too_big_date', {\n              //   date: moment.utc(maxDate).format('DD.MM.YYYY')\n              // })}\n              // minDateMessage={I18n.t(\n              //   'component.date_time_field.too_small_date',\n              //   { date: moment.utc(minDate).format('DD.MM.YYYY') }\n              // )}\n              // okLabel={I18n.t('action.ok')}\n              // todayLabel={I18n.t('shared.today')}\n              // clearLabel={I18n.t('action.clear')}\n              // cancelLabel={I18n.t('action.cancel')}\n            />\n          )}\n          {/* <KeyboardDateTimePicker  /> */}\n        </MuiPickersUtilsProvider>\n      </React.Fragment>\n    )\n  }\n\n  static addOffset(value, props) {\n    if (!value) {\n      return value\n    }\n\n    const {\n      withTime,\n      utcOffset,\n      serverDateFormat,\n      serverDateTimeFormat\n    } = props\n\n    if (!withTime) {\n      return moment(value).format(serverDateFormat)\n    }\n    let dateValue = moment.utc(value)\n    dateValue = dateValue.hours(dateValue.hours() + utcOffset)\n\n    return dateValue.format(serverDateTimeFormat)\n  }\n\n  static subtractOffset(value, props) {\n    if (!value) {\n      return value\n    }\n\n    const {\n      withTime,\n      utcOffset,\n      serverDateFormat,\n      serverDateTimeFormat\n    } = props\n\n    if (!withTime) {\n      return value.format(serverDateFormat)\n    }\n\n    const dateValue = value.hours(value.hours() - utcOffset)\n    return dateValue.format(serverDateTimeFormat)\n  }\n}\n\nDateTimePicker.propTypes = {\n  variant: PropTypes.oneOf([\n    InputVariantStandard,\n    InputVariantOutlined,\n    InputVariantFilled\n  ]),\n  displayNamePosition: PropTypes.oneOf([\n    InputLabelDisplayModeAbove,\n    InputLabelDisplayModeInside\n  ]),\n  readOnly: PropTypes.bool,\n  utcOffset: PropTypes.number,\n  withTime: PropTypes.bool,\n  format: PropTypes.string,\n  serverDateFormat: PropTypes.string,\n  serverDateTimeFormat: PropTypes.string,\n  minDate: PropTypes.string,\n  maxDate: PropTypes.string\n}\n\nDateTimePicker.defaultProps = {\n  locale: 'en',\n  variant: InputVariantOutlined,\n  displayNamePosition: InputLabelDisplayModeInside,\n  underline: true,\n  readOnly: false,\n\n  utcOffset: 0,\n  withTime: false,\n  format: 'DD.MM.YYYY',\n  serverDateFormat: 'YYYY-MM-DD',\n  serverDateTimeFormat: 'YYYY-MM-DDTHH:mm:ss',\n  minDate: '1900-01-01',\n  maxDate: '2100-12-31'\n}\n\nexport default compose(\n  withGuid,\n  withHelperText,\n  withStyles(styles)\n)(DateTimePicker)\n","// https://material-ui.com/api/text-field/\n\nimport React from 'react'\nimport clsx from 'clsx'\nimport PropTypes from 'prop-types'\n\nimport { compose } from 'recompose'\nimport { withStyles } from '@material-ui/styles'\nimport withGuid from './hocs/with_guid.js'\nimport withHelperText from './hocs/with_helper_text.js'\n\nimport { TextField as MaterialTextField, FormLabel } from '@material-ui/core'\n\nimport {\n  InputVariantStandard,\n  InputVariantOutlined,\n  InputVariantFilled,\n  InputLabelDisplayModeInside,\n  InputLabelDisplayModeAbove,\n  TextFieldTypeText,\n  TextFieldTypeNumber,\n  TextFieldTypeEmail,\n  TextFieldCapitalizationNone,\n  TextFieldCapitalizationUppercase,\n  TextFieldCapitalizationCapitalize\n} from './constants.js'\n\nconst styles = (theme) => ({})\n\nclass TextField extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {}\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    let value\n\n    const propsValue = `${props.value || ''}`\n    let defaultValue = `${state.defaultValue || ''}`\n    const stateValue = `${state.value || ''}`\n\n    if (defaultValue !== propsValue) {\n      defaultValue = propsValue\n      value = propsValue\n    } else {\n      if (props.propsPrior) {\n        defaultValue = propsValue\n        value = propsValue\n      } else {\n        value = stateValue\n      }\n    }\n\n    return {\n      value: value,\n      defaultValue: defaultValue\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      this.state.value !== nextState.value ||\n      this.props.displayName !== nextProps.displayName ||\n      this.props.hasError !== nextProps.hasError ||\n      this.props.readOnly !== nextProps.readOnly\n    )\n  }\n\n  onChange = (event) => {\n    const { onChange, capitalization } = this.props\n    let value = (event.target.value || '').trimLeft()\n    if (capitalization === TextFieldCapitalizationUppercase) {\n      value = value.toUpperCase()\n    }\n    if (capitalization === TextFieldCapitalizationCapitalize) {\n      value = value.charAt(0).toUpperCase() + value.slice(1)\n    }\n\n    this.setState({\n      value: value\n    })\n\n    if (onChange) {\n      onChange(value)\n    }\n  }\n\n  onBlur = () => {\n    const { onBlur } = this.props\n    if (onBlur) {\n      onBlur()\n    }\n  }\n\n  type() {\n    return this.props.type\n  }\n\n  inputProps() {\n    const { variant, underline } = this.props\n    const inputProps = {}\n    if (variant === InputVariantFilled) {\n      inputProps.disableUnderline = !underline\n    }\n    return inputProps\n  }\n\n  render() {\n    const { classes, className, guid, hasError, placeholder } = this.props\n\n    const {\n      name,\n      displayName,\n      variant,\n      displayNamePosition,\n      readOnly,\n      multiline,\n      rows,\n      disableAutoComplete\n    } = this.props\n\n    const { value } = this.state\n\n    return (\n      <React.Fragment>\n        {displayNamePosition === InputLabelDisplayModeAbove &&\n          displayName &&\n          displayName !== '' && (\n            <FormLabel htmlFor={guid} error={hasError}>\n              {`${displayName}:`}\n            </FormLabel>\n          )}\n        <MaterialTextField\n          className={clsx(classes.root, className)}\n          id={guid}\n          inputRef={(ref) => (this.textField = ref)}\n          fullWidth\n          error={hasError}\n          InputProps={this.inputProps()}\n          type={this.type()}\n          name={disableAutoComplete ? guid : name}\n          label={\n            displayNamePosition === InputLabelDisplayModeInside\n              ? displayName\n              : undefined\n          }\n          variant={variant}\n          value={value || ''}\n          onChange={this.onChange}\n          onBlur={this.onBlur}\n          disabled={readOnly}\n          multiline={multiline}\n          rows={rows}\n          placeholder={placeholder || ''}\n        />\n      </React.Fragment>\n    )\n  }\n}\n\nTextField.propTypes = {\n  variant: PropTypes.oneOf([\n    InputVariantStandard,\n    InputVariantOutlined,\n    InputVariantFilled\n  ]),\n  type: PropTypes.oneOf([\n    TextFieldTypeText,\n    TextFieldTypeEmail,\n    TextFieldTypeNumber\n  ]),\n  displayNamePosition: PropTypes.oneOf([\n    InputLabelDisplayModeAbove,\n    InputLabelDisplayModeInside\n  ]),\n  propsPrior: PropTypes.bool,\n  capitalization: PropTypes.string,\n  multiline: PropTypes.bool,\n  rows: PropTypes.number,\n  readOnly: PropTypes.bool\n}\n\nTextField.defaultProps = {\n  variant: InputVariantOutlined,\n  type: TextFieldTypeText,\n  displayNamePosition: InputLabelDisplayModeInside,\n  underline: true,\n  propsPrior: false,\n  capitalization: TextFieldCapitalizationNone,\n  multiline: false,\n  rows: 5,\n  readOnly: false\n}\n\nexport default compose(withGuid, withHelperText, withStyles(styles))(TextField)\nexport { TextField as RawTextField }\n","// https://www.npmjs.com/package/react-number-format\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { compose } from 'recompose'\nimport { withStyles } from '@material-ui/styles'\nimport withGuid from './hocs/with_guid.js'\nimport withHelperText from './hocs/with_helper_text.js'\n\nimport { RawTextField } from './text_field.js'\nimport NumberFormat from 'react-number-format'\n\nimport {\n  InputVariantStandard,\n  InputVariantOutlined,\n  InputVariantFilled,\n  InputLabelDisplayModeInside,\n  InputLabelDisplayModeAbove\n} from './constants.js'\n\nconst styles = (theme) => ({})\n\nclass DecimalMask extends React.Component {\n  render() {\n    const {\n      inputRef,\n      mask,\n      onChange,\n      value,\n      prefix,\n      suffix,\n      scale,\n      ...other\n    } = this.props\n    const { decimalSeparator, thousandSeparator } = this.props\n    return (\n      <NumberFormat\n        {...other}\n        getInputRef={(ref) => {\n          inputRef(ref || null)\n        }}\n        decimalSeparator={decimalSeparator}\n        thousandSeparator={thousandSeparator}\n        thousandsGroupStyle='thousand'\n        allowLeadingZeros={false}\n        allowNegative\n        fixedDecimalScale={false}\n        allowEmptyFormatting\n        displayType='input'\n        decimalScale={scale}\n        isNumericString\n        prefix={prefix}\n        suffix={suffix}\n        type='text'\n        onValueChange={(result) => {\n          const { floatValue } = result\n          onChange(floatValue)\n        }}\n        value={value || ''}\n      />\n    )\n  }\n}\n\nclass DecimalField extends RawTextField {\n  static getDerivedStateFromProps(props, state) {\n    let value\n\n    const propsValue = `${props.value || ''}`\n    let defaultValue = `${state.defaultValue || ''}`\n    const stateValue = `${state.value || ''}`\n\n    if (defaultValue !== propsValue) {\n      defaultValue = propsValue\n      value = propsValue\n    } else {\n      value = stateValue\n    }\n\n    const real = value.split('.')[0]\n    const frac = value.split('.')[1]\n\n    if (parseInt(frac) === 0) {\n      value = real\n    }\n\n    return {\n      value: value,\n      defaultValue: defaultValue\n    }\n  }\n\n  onChange = (value) => {\n    const { onChange } = this.props\n    this.setState({\n      value: value\n    })\n\n    if (onChange) {\n      onChange(value)\n    }\n  }\n\n  onBlur = () => {\n    const { value } = this.state\n    const { precision, scale } = this.props\n    const maxReal = precision - scale\n\n    if (!value || value === '') {\n      this.onChange('')\n      return\n    }\n\n    let real = value.split('.')[0]\n    const frac = value.split('.')[1]\n\n    if (!real || real === '') {\n      real = '0'\n    } else if (real.length > maxReal) {\n      real = new Array(maxReal + 1).join('9')\n    }\n\n    const newVal = [real]\n    if (frac && frac !== '') {\n      newVal.push(frac)\n    }\n    this.onChange(newVal.join('.'))\n  }\n\n  inputProps() {\n    const { variant, underline, prefix, suffix, precision, scale } = this.props\n    const { decimalSeparator, thousandSeparator } = this.props\n    const { value } = this.state\n\n    const inputProps = {\n      inputComponent: DecimalMask,\n      inputProps: {\n        value: value || '',\n        prefix: prefix,\n        suffix: suffix,\n        precision: precision,\n        scale: scale,\n        decimalSeparator: decimalSeparator,\n        thousandSeparator: thousandSeparator,\n        onChange: this.onChange,\n        onBlur: this.onBlur\n      }\n    }\n    if (variant === InputVariantFilled) {\n      inputProps.disableUnderline = !underline\n    }\n    return inputProps\n  }\n\n  type() {\n    return 'text'\n  }\n}\n\nDecimalField.propTypes = {\n  variant: PropTypes.oneOf([\n    InputVariantStandard,\n    InputVariantOutlined,\n    InputVariantFilled\n  ]),\n  displayNamePosition: PropTypes.oneOf([\n    InputLabelDisplayModeAbove,\n    InputLabelDisplayModeInside\n  ]),\n  propsPrior: PropTypes.bool,\n  capitalization: PropTypes.string,\n  readOnly: PropTypes.bool,\n  multiline: PropTypes.bool,\n  rows: PropTypes.number,\n  prefix: PropTypes.string,\n  suffix: PropTypes.string,\n  precision: PropTypes.number.isRequired,\n  scale: PropTypes.number\n}\n\nDecimalField.defaultProps = {\n  variant: InputVariantOutlined,\n  displayNamePosition: InputLabelDisplayModeInside,\n  underline: true,\n  scale: 2,\n  decimalSeparator: ',',\n  thousandSeparator: '.',\n  propsPrior: false,\n  multiline: false,\n  rows: 5,\n  readOnly: false\n}\n\nexport default compose(\n  withGuid,\n  withHelperText,\n  withStyles(styles)\n)(DecimalField)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { FormHelperText } from '@material-ui/core'\n\nconst WithAutoDeletion = (Component) => {\n  class WithAutoDeletion extends React.Component {\n    constructor(props) {\n      super(props)\n\n      this.state = {}\n    }\n\n    launchCountdown = () => {\n      const {\n        allowAutoDeleteOnError,\n        autoDeleteTimeout,\n        onAutoDelete\n      } = this.props\n      if (!allowAutoDeleteOnError) {\n        return\n      }\n\n      this.setState({\n        timeLeft: autoDeleteTimeout\n      })\n\n      this.intervalToken = setInterval(() => {\n        const { timeLeft = autoDeleteTimeout } = this.state\n        this.setState({\n          timeLeft: timeLeft - 1\n        })\n      }, 1000)\n\n      setTimeout(() => {\n        clearInterval(this.intervalToken)\n        this.setState({\n          timeLeft: undefined\n        })\n        if (onAutoDelete) {\n          onAutoDelete()\n        }\n      }, autoDeleteTimeout * 1000)\n    }\n\n    render() {\n      const { timeLeft } = this.state\n      const { timeLeftToDeleteText } = this.props\n      return (\n        <React.Fragment>\n          <Component {...this.props} launchCountdown={this.launchCountdown} />\n          {timeLeft && (\n            <FormHelperText error>\n              {`${timeLeftToDeleteText} ${timeLeft}s`}\n            </FormHelperText>\n          )}\n        </React.Fragment>\n      )\n    }\n  }\n\n  WithAutoDeletion.propTypes = {\n    allowAutoDeleteOnError: PropTypes.bool,\n    autoDeleteTimeout: PropTypes.number,\n    onAutoDelete: PropTypes.func\n  }\n\n  WithAutoDeletion.defaultProps = {\n    allowAutoDeleteOnError: false,\n    autoDeleteTimeout: 5,\n    timeLeftToDeleteText: 'That will be removed automatically in'\n  }\n\n  return WithAutoDeletion\n}\n\nexport default WithAutoDeletion\n","import React from 'react'\nimport clsx from 'clsx'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/styles'\nimport { Button as MaterialButton } from '@material-ui/core'\n\nimport {\n  ButtonVariantContained,\n  ButtonVariantText,\n  ButtonVariantOutlined\n} from './constants.js'\n\nconst styles = (theme) => ({\n  root: {}\n})\n\nconst ButtonTypeButton = 'button'\nconst ButtonTypeSubmit = 'submit'\n\nclass Button extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {}\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      disabled: props.disabled\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      this.state.disabled !== nextState.disabled ||\n      this.props.className !== nextProps.className\n    )\n  }\n\n  render() {\n    const {\n      classes,\n      className,\n      labelClass,\n      variant,\n      component,\n      startIcon,\n      ariaControls,\n      ariaHaspopup\n    } = this.props\n\n    const { type, onClick, children } = this.props\n\n    const { disabled } = this.state\n\n    const additionalClasses = {}\n    if (labelClass) {\n      additionalClasses.label = labelClass\n    }\n\n    return (\n      <MaterialButton\n        className={clsx(classes.root, className)}\n        classes={additionalClasses}\n        disabled={disabled}\n        variant={variant}\n        component={component}\n        type={type}\n        startIcon={startIcon}\n        onClick={onClick}\n        aria-controls={ariaControls}\n        aria-haspopup={ariaHaspopup}\n      >\n        {children}\n      </MaterialButton>\n    )\n  }\n}\n\nButton.propTypes = {\n  className: PropTypes.string,\n  labelClass: PropTypes.string,\n  type: PropTypes.oneOf([ButtonTypeButton, ButtonTypeSubmit]),\n  variant: PropTypes.oneOf([\n    ButtonVariantContained,\n    ButtonVariantText,\n    ButtonVariantOutlined\n  ]),\n  component: PropTypes.string,\n  startIcon: PropTypes.node,\n  ariaHaspopup: PropTypes.bool,\n  ariaControls: PropTypes.string,\n  onClick: PropTypes.func,\n  disabled: PropTypes.bool\n}\n\nButton.defaultProps = {\n  type: ButtonTypeButton,\n  variant: ButtonVariantContained,\n  ariaHaspopup: false,\n  disabled: false\n}\n\nconst styledButton = withStyles(styles)(Button)\nexport default styledButton\n","const ButtonVariantContained = 'contained'\nconst ButtonVariantOutlined = 'outlined'\nconst ButtonVariantText = 'text'\n\nexport { ButtonVariantContained, ButtonVariantOutlined, ButtonVariantText }\n","import React from 'react'\nimport clsx from 'clsx'\nimport PropTypes from 'prop-types'\nimport withGuid from '../hocs/with_guid.js'\nimport { withStyles } from '@material-ui/styles'\nimport { ButtonVariantOutlined } from './constants.js'\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload'\nimport Button from './button.js'\nimport { compose } from 'recompose'\n\nconst styles = (theme) => ({\n  input: {\n    display: 'none'\n  },\n  button: {\n    padding: '7px 10px'\n  },\n  error: {\n    backgroundColor: 'rgba(255,0,0,0.1)'\n  }\n})\n\nclass UploadButton extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  onChange = (event) => {\n    const { onChange, multiple } = this.props\n    let value\n    if (multiple) {\n      value = [...event.target.files]\n    } else {\n      value = event.target.files[0]\n    }\n    if (onChange && value) {\n      onChange(value)\n    }\n    this.filePicker.value = ''\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      hasError: props.hasError\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return this.state.hasError !== nextState.hasError\n  }\n\n  render() {\n    const { accept, guid, classes, text, multiple } = this.props\n    const { hasError } = this.state\n    return (\n      <div>\n        <input\n          className={classes.input}\n          id={guid}\n          type='file'\n          multiple={multiple || undefined}\n          accept={accept}\n          onChange={this.onChange}\n          ref={(ref) => (this.filePicker = ref)}\n        />\n        <label htmlFor={guid}>\n          <Button\n            className={clsx({\n              [classes.button]: true,\n              [classes.error]: hasError\n            })}\n            variant={ButtonVariantOutlined}\n            component='span'\n            startIcon={<CloudUploadIcon />}\n          >\n            {text}\n          </Button>\n        </label>\n      </div>\n    )\n  }\n}\n\nUploadButton.propTypes = {\n  accept: PropTypes.string,\n  text: PropTypes.string,\n  multiple: PropTypes.bool,\n  onChange: PropTypes.func,\n  hasError: PropTypes.bool\n}\n\nUploadButton.defaultProps = {\n  accept: 'image/*',\n  text: 'Upload',\n  multiple: false,\n  hasError: false\n}\n\nexport default compose(\n  withGuid,\n  withStyles(styles, { name: 'UploadButton' })\n)(UploadButton)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport { withStyles } from '@material-ui/styles'\nimport withHelperText from './hocs/with_helper_text.js'\nimport withAutoDeletion from './hocs/with_auto_deletion.js'\nimport { compose } from 'recompose'\n\nimport Button from './buttons/button.js'\nimport { ButtonVariantOutlined } from './buttons/constants.js'\nimport UploadButton from './buttons/upload_button.js'\nimport { CircularProgress, FormHelperText } from '@material-ui/core'\n\nconst styles = (theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n    position: 'relative'\n  },\n  loadingRoot: {\n    height: '50px !important'\n  },\n  title: {\n    color: '#000',\n    fontSize: '14px',\n    marginBottom: '6px',\n    textTransform: 'uppercase',\n    fontWeight: '400'\n  },\n  subtitle: {\n    fontSize: '1rem',\n    marginBottom: '10px',\n    color: 'rgba(0, 0, 0, 0.54)'\n  },\n  progress: {\n    position: 'absolute',\n    left: '50%',\n    top: '50%',\n    transform: 'translate(-50%, -50%)'\n  },\n  fade: {\n    opacity: 0.2\n  },\n  delete: {\n    color: '#f00',\n    borderColor: 'rgba(255, 0, 0, 0.1)'\n  },\n  link: {\n    fontSize: '14px',\n    textTransform: 'uppercase',\n    marginBottom: '10px',\n    color: 'rgba(0, 0, 0, 0.54)',\n    wordBreak: 'break-word',\n    flexGrow: '1'\n  }\n})\n\n/*\n * return (\n *   <FileField onChange = { (value) => {\n *                  // Some actions\n *                } }\n *                uploaded = { (file) => {\n *                  return promise;\n *                }}\n *                value = { {id: 1, url: \"https://path/to/image.pdf\" }} } />\n * )\n */\n\nclass FileField extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      uploading: false\n    }\n  }\n\n  onFileChange = (file) => {\n    this.setState({ local: file, error: undefined })\n    this.upload(file)\n  }\n\n  onDeleteClick = (event) => {\n    this.setState({ value: undefined, local: undefined, error: undefined })\n    this.onChange(undefined)\n  }\n\n  onChange = (value) => {\n    if (this.props.onChange) {\n      this.props.onChange(value)\n    }\n  }\n\n  upload = (file) => {\n    this.setState({ uploading: true, error: undefined, local: undefined })\n    this.props\n      .uploader(file)\n      .then((uploadedFile) => {\n        this.setState({ uploading: false, value: uploadedFile })\n        this.onChange(uploadedFile)\n      })\n      .catch((error) => {\n        this.setState({ uploading: false, error: error })\n        this.onChange(undefined)\n      })\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    let value\n\n    const propsValue = props.value\n    let defaultValue = state.defaultValue\n    const stateValue = state.value\n\n    if (JSON.stringify(defaultValue) !== JSON.stringify(propsValue)) {\n      defaultValue = propsValue\n      value = propsValue\n    } else {\n      value = stateValue\n    }\n\n    // eslint-disable-next-line no-use-before-define\n    const hasErrors = Boolean(hasErrors)\n    let errorMessages = []\n\n    if (state.error && state.error.errorData && state.error.errorData.fields) {\n      errorMessages = state.error.errorData.fields.attachment || []\n    }\n\n    return {\n      ...state,\n      hasErrors: hasErrors,\n      errorMessages: errorMessages,\n      value: value && value.id ? value : undefined,\n      local: value && value.file ? value.file : undefined,\n      defaultValue: defaultValue\n    }\n  }\n\n  componentDidMount() {\n    const { local } = this.state\n    if (local) {\n      this.upload(local)\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.uploading !== prevState.uploading) {\n      this.onChange(this.state.value)\n    }\n    const { launchCountdown } = this.props\n    if (this.state.error && !prevState.error) {\n      launchCountdown()\n    }\n  }\n\n  render() {\n    const {\n      classes,\n      displayName,\n      allowDelete,\n      accept,\n      allowSelfLoad,\n      deleteText\n    } = this.props\n    // eslint-disable-next-line no-unused-vars\n    const { local, value, uploading, error, hasErrors } = this.state\n    const buttons = []\n\n    if (allowSelfLoad && !uploading && !local && !value) {\n      buttons.push(\n        <UploadButton\n          key='upload'\n          multiple={false}\n          onChange={this.onFileChange}\n          accept={accept}\n        />\n      )\n    }\n\n    if (!uploading && allowDelete && value) {\n      buttons.push(\n        <Button\n          key='delete'\n          className={clsx(classes.button, classes.delete)}\n          component='span'\n          variant={ButtonVariantOutlined}\n          onClick={this.onDeleteClick}\n        >\n          {deleteText}\n        </Button>\n      )\n    }\n    return (\n      <div\n        className={clsx({\n          [classes.root]: true,\n          [classes.loadingRoot]: uploading\n        })}\n      >\n        {displayName && <div className={classes.title}>{displayName}</div>}\n        {error && <div className={classes.subtitle}>{error.message}</div>}\n        {value && (\n          <a\n            href={value.url}\n            target='_blank'\n            rel='noreferrer'\n            className={classes.link}\n          >\n            {value.filename}\n          </a>\n        )}\n\n        {uploading && (\n          <div className={classes.progress}>\n            <CircularProgress />\n          </div>\n        )}\n        {error && (\n          <div className={classes.errors}>\n            {this.state.errorMessages.map((errorText) => (\n              <FormHelperText error key={errorText}>\n                {errorText}\n              </FormHelperText>\n            ))}\n          </div>\n        )}\n\n        {buttons.length > 0 && <div className={classes.buttons}>{buttons}</div>}\n      </div>\n    )\n  }\n}\n\nFileField.propTypes = {\n  allowDelete: PropTypes.bool,\n  uploader: PropTypes.func.isRequired,\n  onChange: PropTypes.func,\n  accept: PropTypes.string\n}\n\nFileField.defaultProps = {\n  allowDelete: true,\n  allowSelfLoad: true,\n  accept: '*/*',\n  deleteText: 'Delete'\n}\n\nexport default compose(\n  withHelperText,\n  withAutoDeletion,\n  withStyles(styles, { name: 'FileField' })\n)(FileField)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport { withStyles } from '@material-ui/styles'\nimport withHelperText from './hocs/with_helper_text.js'\nimport withAutoDeletion from './hocs/with_auto_deletion.js'\nimport { compose } from 'recompose'\n\nimport Button from './buttons/button.js'\nimport UploadButton from './buttons/upload_button.js'\nimport { ButtonVariantOutlined } from './buttons/constants.js'\nimport {\n  Card,\n  CardActionArea,\n  CardActions,\n  CardMedia,\n  CircularProgress,\n  CardHeader,\n  CardContent,\n  FormHelperText\n} from '@material-ui/core'\n\nconst styles = (theme) => ({\n  fileHeader: {\n    padding: '9px 12px',\n    '& .MuiCardHeader-subheader': {\n      fontSize: '13px',\n      wordBreak: 'break-all'\n    }\n  },\n  mediaContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    minHeight: '50px'\n  },\n  media: {\n    height: '115px',\n    flexGrow: '1'\n  },\n  progress: {\n    position: 'absolute',\n    left: '50%',\n    top: '50%',\n    transform: 'translate(-50%, -50%)'\n  },\n  fade: {\n    opacity: 0.2\n  },\n  delete: {\n    color: '#f00',\n    borderColor: 'rgba(255, 0, 0, 0.1)'\n  }\n})\n/*\n * return (\n *   <ImageField onChange = { (value) => {\n *                  // Some actions\n *                } }\n *                uploaded = { (file) => {\n *                  return promise;\n *                }}\n *                value = { {id: 1, url: \"https://path/to/image.jpg\" }} } />\n * )\n */\nclass ImageField extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      uploading: false\n    }\n  }\n\n  onFileChange = (file) => {\n    this.setState({ local: file, error: undefined })\n    this.upload(file)\n  }\n\n  onDeleteClick = (event) => {\n    this.setState({ value: undefined, local: undefined, error: undefined })\n    this.onChange(undefined)\n  }\n\n  onChange = (value) => {\n    if (this.props.onChange) {\n      this.props.onChange(value)\n    }\n  }\n\n  upload = (file) => {\n    this.setState({ uploading: true, error: undefined, local: undefined })\n    this.props\n      .uploader(file)\n      .then((image) => {\n        this.setState({ uploading: false, value: image })\n        this.onChange(image)\n      })\n      .catch((error) => {\n        this.setState({ uploading: false, error: error })\n        this.onChange(undefined)\n      })\n  }\n\n  getSubheader = () => {\n    const { uploading, uploadingText, notUploadedText, value } = this.state\n\n    if (value && value.filename) {\n      return value.filename\n    }\n    if (uploading) {\n      return uploadingText\n    }\n    return notUploadedText\n  }\n\n  getErrorMessages = () => {\n    const error = this.state.error\n\n    if (error && error.errorData && error.errorData.fields) {\n      return error.errorData.fields.attachment || []\n    } else {\n      return []\n    }\n  }\n\n  componentDidMount() {\n    const { local } = this.state\n    if (local) {\n      this.upload(local)\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    let value\n\n    const propsValue = props.value\n    let defaultValue = state.defaultValue\n    const stateValue = state.value\n\n    if (JSON.stringify(defaultValue) !== JSON.stringify(propsValue)) {\n      defaultValue = propsValue\n      value = propsValue\n    } else {\n      value = stateValue\n    }\n\n    return {\n      ...state,\n      value: value && value.id ? value : undefined,\n      local: value && value.file ? value.file : undefined,\n      defaultValue: defaultValue\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.uploading !== prevState.uploading) {\n      this.onChange(this.state.value)\n    }\n\n    const { launchCountdown } = this.props\n    if (this.state.error && !prevState.error) {\n      launchCountdown()\n    }\n  }\n\n  render() {\n    const {\n      classes,\n      displayName,\n      allowDelete,\n      allowSelfLoad,\n      deleteText\n    } = this.props\n    const { local, value, uploading, error } = this.state\n    const buttons = []\n\n    if (!uploading && !local && !value && allowSelfLoad) {\n      buttons.push(\n        <UploadButton\n          key='upload'\n          onChange={this.onFileChange}\n          multiple={false}\n        />\n      )\n    }\n\n    if (!uploading && allowDelete && value) {\n      buttons.push(\n        <Button\n          key='delete'\n          className={clsx(classes.button, classes.delete)}\n          component='span'\n          variant={ButtonVariantOutlined}\n          onClick={this.onDeleteClick}\n        >\n          {deleteText}\n        </Button>\n      )\n    }\n\n    return (\n      <Card className={classes.root}>\n        <CardHeader\n          title={displayName}\n          subheader={error ? error.message : this.getSubheader()}\n          className={classes.fileHeader}\n        />\n        <CardActionArea className={classes.mediaContainer}>\n          {value && (\n            <CardMedia className={classes.media} image={value.urls.medium} />\n          )}\n          {uploading && (\n            <div className={classes.progress}>\n              <CircularProgress />\n            </div>\n          )}\n          {error && (\n            <CardContent>\n              {this.getErrorMessages().map((errorText) => (\n                <FormHelperText error key={errorText}>\n                  {errorText}\n                </FormHelperText>\n              ))}\n            </CardContent>\n          )}\n        </CardActionArea>\n        {buttons.length > 0 && <CardActions>{buttons}</CardActions>}\n      </Card>\n    )\n  }\n}\n\nImageField.propTypes = {\n  allowDelete: PropTypes.bool,\n  allowSelfLoad: PropTypes.bool,\n  uploader: PropTypes.func.isRequired,\n  onChange: PropTypes.func,\n  file: PropTypes.object,\n  value: PropTypes.object\n}\n\nImageField.defaultProps = {\n  allowDelete: true,\n  allowSelfLoad: true,\n  deleteText: 'Delete',\n  notUploadedText: 'Not uploaded',\n  uploadingText: 'Uploading'\n}\n\nexport default compose(\n  withHelperText,\n  withAutoDeletion,\n  withStyles(styles, { name: 'ImageField' })\n)(ImageField)\n","// https://material-ui.com/ru/api/select/\n// https://material-ui.com/ru/api/menu-item/\n\nimport React from 'react'\nimport clsx from 'clsx'\nimport PropTypes from 'prop-types'\nimport uuidv4 from 'uuid/v4'\n\nimport {\n  Select,\n  FormLabel,\n  InputLabel,\n  FormControl,\n  MenuItem\n} from '@material-ui/core'\n\nimport {\n  InputVariantStandard,\n  InputVariantOutlined,\n  InputVariantFilled,\n  InputLabelDisplayModeInside,\n  InputLabelDisplayModeAbove,\n  ClearItemValue\n} from './constants.js'\n\nconst selectStyles = (theme) => ({\n  root: {\n    '& .MuiSelect-selectMenu': {\n      display: 'flex',\n      '& $checkMark': {\n        display: 'none'\n      }\n    },\n    '& .PrivateNotchedOutline-legendNotched-4': {\n      maxWidth: '1000px'\n    }\n  },\n  menuItem: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  text: {\n    display: 'block'\n  },\n  checkMark: {\n    marginLeft: '24px'\n  },\n  displayValue: {\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis'\n  }\n})\n\nclass BaseSelectField extends React.Component {\n  constructor(props) {\n    super(props)\n    this.labelId = uuidv4()\n\n    this.state = {}\n    this.onChange = this.onChange.bind(this)\n\n    this.value = this.value.bind(this)\n    this.renderValue = this.renderValue.bind(this)\n  }\n\n  onChange(event) {}\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      this.props.displayName !== nextProps.displayName ||\n      this.props.hasError !== nextProps.hasError ||\n      this.state.isOpen !== nextState.isOpen ||\n      this.props.readOnly !== nextProps.readOnly\n    )\n  }\n\n  value() {\n    return ''\n  }\n\n  renderValue() {\n    return <React.Fragment />\n  }\n\n  pickerContent() {\n    return <React.Fragment />\n  }\n\n  clearItem() {\n    const { classes, clearItem } = this.props\n    return (\n      <MenuItem\n        key={ClearItemValue}\n        value={ClearItemValue}\n        className={classes.menuItem}\n      >\n        <span className={classes.text}>{clearItem}</span>\n      </MenuItem>\n    )\n  }\n\n  render() {\n    const {\n      classes,\n      className,\n      guid,\n      hasError,\n      multiple,\n      allowClear,\n      readOnly\n    } = this.props\n\n    const { name, displayName, variant, displayNamePosition } = this.props\n\n    return (\n      <React.Fragment>\n        {displayName && displayNamePosition === InputLabelDisplayModeAbove && (\n          <FormLabel htmlFor={guid} error={hasError}>\n            {`${displayName}:`}\n          </FormLabel>\n        )}\n        <FormControl variant={variant} fullWidth disabled={readOnly}>\n          {displayName && displayNamePosition === InputLabelDisplayModeInside && (\n            <React.Fragment>\n              {allowClear && (\n                <InputLabel id={this.labelId} error={hasError} shrink>\n                  {`${displayName}`}\n                </InputLabel>\n              )}\n              {!allowClear && (\n                <InputLabel id={this.labelId} error={hasError}>\n                  {`${displayName}`}\n                </InputLabel>\n              )}\n            </React.Fragment>\n          )}\n          <Select\n            className={clsx(classes.root, className)}\n            fullWidth\n            id={guid}\n            labelId={this.labelId}\n            label={\n              displayNamePosition === InputLabelDisplayModeInside\n                ? displayName\n                : undefined\n            }\n            name={name}\n            variant={variant}\n            value={this.value()}\n            renderValue={() => {\n              const renderedValue = this.renderValue()\n              return (\n                <div className={classes.displayValue} title={renderedValue}>\n                  {renderedValue}\n                </div>\n              )\n            }}\n            error={hasError}\n            multiple={multiple}\n            displayEmpty={allowClear}\n            MenuProps={{\n              onEnter: () => {\n                this.setState({ isOpen: true })\n              },\n              onExit: () => {\n                this.setState({ isOpen: false })\n              }\n            }}\n            onOpen={this.onOpen}\n            onChange={this.onChange}\n          >\n            {this.pickerContent()}\n          </Select>\n        </FormControl>\n      </React.Fragment>\n    )\n  }\n}\n\nBaseSelectField.propTypes = {\n  variant: PropTypes.oneOf([\n    InputVariantStandard,\n    InputVariantOutlined,\n    InputVariantFilled\n  ]),\n  displayNamePosition: PropTypes.oneOf([\n    InputLabelDisplayModeAbove,\n    InputLabelDisplayModeInside\n  ]),\n  clearItem: PropTypes.string,\n  allowClear: PropTypes.bool,\n  multiple: PropTypes.bool\n}\n\nBaseSelectField.defaultProps = {\n  variant: InputVariantOutlined,\n  displayNamePosition: InputLabelDisplayModeInside,\n  underline: true,\n  allowClear: false,\n  clearItem: 'all',\n  multiple: false\n}\n\nexport default BaseSelectField\nexport { selectStyles }\n","import React from 'react'\nimport { SvgIcon } from '@material-ui/core'\nimport clsx from 'clsx'\nimport { withStyles } from '@material-ui/styles'\n\nconst styles = (theme) => ({\n  root: {\n    width: 24,\n    height: 24,\n    fill: 'transparent'\n  }\n})\n\nclass IcCheckMark extends React.Component {\n  render() {\n    const { classes, className } = this.props\n\n    return (\n      <SvgIcon className={clsx(classes.root, className)} viewBox='0 0 24 24'>\n        <path\n          d='M9.00016 16.17L4.83016 12L3.41016 13.41L9.00016 19L21.0002 7.00003L19.5902 5.59003L9.00016 16.17Z'\n          fill='#9DC647'\n        />\n      </SvgIcon>\n    )\n  }\n}\n\nexport default withStyles(styles)(IcCheckMark)\n","// https://material-ui.com/ru/api/select/\n// https://material-ui.com/ru/api/menu-item/\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { compose } from 'recompose'\nimport { withStyles } from '@material-ui/styles'\nimport withHelperText from './hocs/with_helper_text.js'\nimport withGuid from './hocs/with_guid.js'\n\nimport { MenuItem } from '@material-ui/core'\n\nimport BaseSelectField, { selectStyles } from './base_select_field.js'\nimport IcCheckMark from './resources/icons/ic_check_mark.js'\n\nimport {\n  InputVariantStandard,\n  InputVariantOutlined,\n  InputVariantFilled,\n  InputLabelDisplayModeInside,\n  InputLabelDisplayModeAbove,\n  ClearItemValue\n} from './constants.js'\n\nconst styles = (theme) => ({})\n\nclass SelectField extends BaseSelectField {\n  constructor(props) {\n    super(props)\n\n    this.processValue = this.processValue.bind(this)\n    this.isSelected = this.isSelected.bind(this)\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    let value\n\n    const { multiple, availableValues } = props\n\n    const emptyValue = multiple ? [] : ''\n\n    const propsValue = props.value || emptyValue\n    let defaultValue = state.defaultValue || emptyValue\n    const stateValue = state.value || emptyValue\n\n    if (JSON.stringify(defaultValue) !== JSON.stringify(propsValue)) {\n      defaultValue = propsValue\n      value = propsValue\n    } else {\n      value = stateValue\n    }\n\n    return {\n      ...state,\n      availableValues: availableValues,\n      value: value,\n      defaultValue: defaultValue\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      super.shouldComponentUpdate(nextState, nextState) ||\n      JSON.stringify(this.state.value) !== JSON.stringify(nextState.value) ||\n      JSON.stringify(this.state.availableValues) !==\n        JSON.stringify(nextState.availableValues)\n    )\n  }\n\n  value() {\n    const { value } = this.state\n    return value\n  }\n\n  onChange(event) {\n    const { onChange } = this.props\n    const value = this.processValue(event.target.value)\n\n    this.setState({\n      value: value\n    })\n\n    if (onChange) {\n      onChange(value)\n    }\n  }\n\n  processValue(newValue) {\n    const { multiple } = this.props\n    if (!multiple) {\n      return newValue === ClearItemValue ? '' : newValue\n    }\n    if (newValue.includes(ClearItemValue)) {\n      return []\n    }\n    return newValue\n  }\n\n  renderValue() {\n    const { multiple, clearItem } = this.props\n    const { value } = this.state\n\n    if (!multiple && (!value || value === '')) {\n      return clearItem\n    }\n    if (multiple && value.length === 0) {\n      return clearItem\n    }\n    if (!multiple) {\n      return this.label(value)\n    }\n\n    return value\n      .map((val) => {\n        return this.label(val)\n      })\n      .join(', ')\n  }\n\n  isSelected(val) {\n    const { multiple } = this.props\n    const { value } = this.state\n    if (!multiple) {\n      return val === value\n    }\n    return value.includes(val)\n  }\n\n  pickerContent() {\n    const { classes, allowClear } = this.props\n\n    const { availableValues } = this.state\n\n    let optionValues = this.rawValues()\n    if (availableValues) {\n      optionValues = optionValues.filter(\n        (val) => availableValues.includes(val) || this.isSelected(val)\n      )\n    }\n\n    const options = optionValues.map((rawValue) => {\n      return (\n        <MenuItem key={rawValue} value={rawValue} className={classes.menuItem}>\n          <span className={classes.text}>{this.label(rawValue)}</span>\n          {this.isSelected(rawValue) && (\n            <IcCheckMark className={classes.checkMark} />\n          )}\n        </MenuItem>\n      )\n    })\n    if (allowClear && optionValues.length > 0) {\n      options.unshift(this.clearItem())\n    }\n    return options\n  }\n\n  rawValues() {\n    const { data } = this.props\n    const values = data.map((item) => {\n      return item.value\n    })\n    return values\n  }\n\n  values() {\n    const { data } = this.props\n    const result = {}\n    this.rawValues().forEach((rawValue, index) => {\n      result[rawValue] = {\n        key: data[index].key,\n        value: rawValue\n      }\n    })\n    return result\n  }\n\n  label(value) {\n    if (!value) {\n      return '-'\n    }\n    const enumValue = this.values()[value]\n    if (!enumValue) {\n      return '-'\n    }\n    return enumValue.key\n  }\n\n  render() {\n    const { data } = this.props\n\n    if (!data) {\n      return <React.Fragment />\n    }\n    return super.render()\n  }\n}\n\nSelectField.propTypes = {\n  variant: PropTypes.oneOf([\n    InputVariantStandard,\n    InputVariantOutlined,\n    InputVariantFilled\n  ]),\n  displayNamePosition: PropTypes.oneOf([\n    InputLabelDisplayModeAbove,\n    InputLabelDisplayModeInside\n  ]),\n  allowClear: PropTypes.bool,\n  multiple: PropTypes.bool\n}\n\nSelectField.defaultProps = {\n  variant: InputVariantOutlined,\n  displayNamePosition: InputLabelDisplayModeInside,\n  underline: true,\n  allowClear: false,\n  clearItem: 'all',\n  multiple: false\n}\n\nexport default compose(\n  withGuid,\n  withHelperText,\n  withStyles(\n    (theme) => ({\n      ...selectStyles(theme),\n      ...styles(theme)\n    }),\n    { withTheme: true }\n  )\n)(SelectField)\n","// https://material-ui.com/ru/api/select/\n// https://material-ui.com/ru/api/menu-item/\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { compose } from 'recompose'\nimport { withStyles } from '@material-ui/styles'\nimport withHelperText from './hocs/with_helper_text.js'\nimport withGuid from './hocs/with_guid.js'\n\nimport { MenuItem, TextField } from '@material-ui/core'\nimport BaseSelectField, { selectStyles } from './base_select_field.js'\n\nimport IcCheckMark from './resources/icons/ic_check_mark.js'\n\nimport {\n  InputVariantStandard,\n  InputVariantOutlined,\n  InputVariantFilled,\n  InputLabelDisplayModeInside,\n  InputLabelDisplayModeAbove,\n  ClearItemValue\n} from './constants.js'\n\nconst styles = (theme) => ({\n  textFieldContainer: {\n    padding: '0px 16px',\n    marginBottom: '10px'\n  }\n})\n\nclass RemoteSelectField extends BaseSelectField {\n  constructor(props) {\n    super(props)\n    this.searchKey = 'RemoteSelectField-TextField'\n\n    this.state = {\n      options: undefined,\n      query: ''\n    }\n\n    this.searchQuery = ''\n    this.selectedValueIds = []\n  }\n\n  componentDidMount() {\n    const { multiple, primaryKey } = this.props\n    const { valueId } = this.props\n    const { value, options } = this.state\n\n    this.selectedValueIds = []\n\n    if (valueId) {\n      if (multiple && valueId.length > 0) {\n        this.selectedValueIds = [...valueId]\n      }\n      if (!multiple) {\n        this.selectedValueIds = [valueId]\n      }\n    } else if (value) {\n      if (multiple && value.length > 0) {\n        this.selectedValueIds = value.map((val) => `${val[primaryKey]}`)\n      }\n      if (!multiple) {\n        this.selectedValueIds = `${value[primaryKey]}`\n      }\n    }\n    if (options.length === 0 && this.selectedValueIds.length > 0) {\n      this.loadData()\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    let value\n\n    const { multiple } = props\n\n    const emptyValue = multiple ? [] : undefined\n\n    const propsValue = props.value || emptyValue\n    let defaultValue = state.defaultValue || emptyValue\n    const stateValue = state.value || emptyValue\n\n    if (JSON.stringify(defaultValue) !== JSON.stringify(propsValue)) {\n      defaultValue = propsValue\n      value = propsValue\n    } else {\n      value = stateValue\n    }\n    let options = state.options\n    if (!options) {\n      if (multiple && value.length > 0) {\n        options = [...value]\n      } else if (!multiple && value) {\n        options = [{ ...value }]\n      } else {\n        options = []\n      }\n    }\n\n    return {\n      ...state,\n      value: value,\n      options: options,\n      defaultValue: defaultValue\n    }\n  }\n\n  shouldComponentUpdate(_, nextState) {\n    return (\n      super.shouldComponentUpdate(nextState, nextState) ||\n      JSON.stringify(this.state.value) !== JSON.stringify(nextState.value) ||\n      JSON.stringify(this.state.options) !==\n        JSON.stringify(nextState.options) ||\n      this.state.query !== nextState.query\n    )\n  }\n\n  onOpen = () => {\n    this.loadData()\n  }\n\n  onQueryChange = (event) => {\n    const value = event.target.value\n    this.searchQuery = value\n    this.setState({\n      query: value\n    })\n\n    if (this.timeoutToken) {\n      clearTimeout(this.timeoutToken)\n    }\n    this.timeoutToken = setTimeout(() => {\n      clearTimeout(this.timeoutToken)\n      this.timeoutToken = undefined\n\n      this.loadData()\n    }, this.props.sendQueryTimeout)\n  }\n\n  onChange = (event) => {\n    const { onChange } = this.props\n    const { options } = this.state\n    const valueId = event.target.value\n\n    const value = this.processValue(valueId)\n\n    this.setState({\n      value: value,\n      options: this.updateOptions(options, value)\n    })\n\n    if (onChange) {\n      onChange(value)\n    }\n  }\n\n  processValue = (newValue) => {\n    const { multiple, primaryKey } = this.props\n    const { options } = this.state\n\n    if (!multiple && newValue === ClearItemValue) {\n      return ''\n    }\n    if (multiple && newValue.includes(ClearItemValue)) {\n      return []\n    }\n\n    if (Array.isArray(newValue)) {\n      newValue = newValue.map((val) => `${val}`)\n    } else {\n      newValue = `${newValue}`\n    }\n\n    const values = options.filter((item) => {\n      const itemId = `${item[primaryKey]}`\n      if (!multiple) {\n        return itemId === newValue\n      }\n      return newValue.includes(itemId)\n    })\n\n    this.selectedValueIds = values.map((val) => `${val[primaryKey]}`)\n\n    return multiple ? values : values[0]\n  }\n\n  renderValue = () => {\n    const { multiple, clearItem } = this.props\n    const { value } = this.state\n\n    if (!multiple && !value) {\n      return clearItem\n    }\n    if (multiple && value.length === 0) {\n      return clearItem\n    }\n    if (!multiple) {\n      return this.optionDisplayName(value)\n    }\n\n    return value\n      .map((val) => {\n        return this.optionDisplayName(val)\n      })\n      .join(', ')\n  }\n\n  isSelected = (val) => {\n    const { multiple, primaryKey } = this.props\n    const valId = `${val[primaryKey]}`\n    if (!multiple) {\n      const { value = {} } = this.state\n      const valueId = `${value[primaryKey]}`\n      return valId === valueId\n    }\n\n    const { value } = this.state\n    const valueIds = value.map((val) => `${val[primaryKey]}`)\n    return valueIds.includes(valId)\n  }\n\n  loadData = () => {\n    const { downloader } = this.props\n    this.setState({\n      loading: true\n    })\n\n    downloader(this.searchQuery, this.selectedValueIds)\n      .then((list) => {\n        this.setState({\n          loading: false\n        })\n\n        const { value } = this.state\n        this.setState({\n          loading: false,\n          options: this.updateOptions(list, value)\n        })\n      })\n      .catch(() => {\n        this.setState({\n          loading: false\n        })\n      })\n  }\n\n  optionDisplayName = (option) => {\n    if (!option) {\n      return ''\n    }\n    return this.props.optionDisplayName(option)\n  }\n\n  updateOptions = (options, value) => {\n    const { primaryKey, multiple } = this.props\n    const newOptions = [...options]\n\n    let valuesArray = []\n    if (multiple && value.length > 0) {\n      valuesArray = [...value]\n    } else if (!multiple && value) {\n      valuesArray = [{ ...value }]\n    }\n\n    valuesArray.forEach((val) => {\n      const index = newOptions.findIndex(\n        (item) => `${item[primaryKey]}` === `${val[primaryKey]}`\n      )\n      if (index >= 0) {\n        newOptions.splice(index, 1)\n      }\n      newOptions.unshift({ ...val })\n    })\n    return newOptions\n  }\n\n  value = () => {\n    const { primaryKey, multiple } = this.props\n    const { value } = this.state\n\n    if (!value) {\n      return ''\n    }\n    if (!multiple) return `${value[primaryKey]}`\n    return value.map((val) => `${val[primaryKey]}`)\n  }\n\n  pickerContent = () => {\n    const { classes, primaryKey, optionKey, allowClear } = this.props\n\n    const { options, query } = this.state\n\n    const items = options.map((option) => {\n      const val = option[primaryKey]\n      const key = option[optionKey]\n      return (\n        <MenuItem\n          key={key}\n          value={`${val}`}\n          aria-disabled\n          className={classes.menuItem}\n        >\n          <span className={classes.text}>{this.optionDisplayName(option)}</span>\n          {this.isSelected(option) && (\n            <IcCheckMark className={classes.checkMark} />\n          )}\n        </MenuItem>\n      )\n    })\n    if (allowClear) {\n      items.unshift(this.clearItem())\n    }\n    items.unshift(\n      <div className={classes.textFieldContainer} key={this.searchKey}>\n        <TextField\n          variant={InputVariantOutlined}\n          fullWidth\n          value={query}\n          onChange={this.onQueryChange}\n          onClick={(event) => {\n            event.stopPropagation()\n            event.preventDefault()\n          }}\n        />\n      </div>\n    )\n    return items\n  }\n}\n\nRemoteSelectField.propTypes = {\n  variant: PropTypes.oneOf([\n    InputVariantStandard,\n    InputVariantOutlined,\n    InputVariantFilled\n  ]),\n  displayNamePosition: PropTypes.oneOf([\n    InputLabelDisplayModeAbove,\n    InputLabelDisplayModeInside\n  ]),\n  allowClear: PropTypes.bool,\n  multiple: PropTypes.bool,\n  underline: PropTypes.bool,\n  downloader: PropTypes.func,\n  sendQueryTimeout: PropTypes.number,\n  primaryKey: PropTypes.string,\n  optionKey: PropTypes.string,\n  optionDisplayName: PropTypes.func\n}\n\nRemoteSelectField.defaultProps = {\n  variant: InputVariantOutlined,\n  displayNamePosition: InputLabelDisplayModeInside,\n  underline: true,\n  sendQueryTimeout: 500,\n  primaryKey: 'id',\n  optionKey: 'id',\n  optionDisplayName: (option) => {\n    return option.name\n  },\n  allowClear: false,\n  clearItem: 'all',\n  multiple: false\n}\n\nexport default compose(\n  withGuid,\n  withHelperText,\n  withStyles(\n    (theme) => ({\n      ...selectStyles(theme),\n      ...styles(theme)\n    }),\n    { withTheme: true }\n  )\n)(RemoteSelectField)\n","// https://material-ui.com/api/text-field/\n// https://github.com/text-mask/text-mask/blob/master/componentDocumentation.md#readme\n\nimport React from 'react'\nimport clsx from 'clsx'\nimport PropTypes from 'prop-types'\n\nimport { compose } from 'recompose'\nimport { withStyles } from '@material-ui/styles'\nimport withGuid from './hocs/with_guid.js'\nimport withHelperText from './hocs/with_helper_text.js'\n\nimport { TextField as MaterialTextField, FormLabel } from '@material-ui/core'\nimport MaskedInput from 'react-text-mask'\n\nimport {\n  InputVariantStandard,\n  InputVariantOutlined,\n  InputVariantFilled,\n  InputLabelDisplayModeInside,\n  InputLabelDisplayModeAbove,\n  TextFieldTypePhone\n} from './constants.js'\n\nconst styles = (theme) => ({})\n\nclass PhoneMask extends React.Component {\n  render() {\n    const { inputRef, mask, onChange, value, ...other } = this.props\n    return (\n      <MaskedInput\n        {...other}\n        ref={(ref) => {\n          inputRef(ref ? ref.inputElement : null)\n        }}\n        mask={mask}\n        placeholderChar={'\\u2000'}\n        showMask\n        guide={false}\n        onChange={onChange}\n        value={value}\n      />\n    )\n  }\n}\n\nclass PhoneField extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {}\n\n    this.onChange = this.onChange.bind(this)\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    let value\n\n    const propsValue = `${props.value || ''}`\n    let defaultValue = `${state.defaultValue || ''}`\n    const stateValue = `${state.value || ''}`\n\n    if (defaultValue !== propsValue) {\n      defaultValue = propsValue\n      value = propsValue\n    } else {\n      value = stateValue\n    }\n\n    return {\n      value: value,\n      defaultValue: defaultValue\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      this.state.value !== nextState.value ||\n      this.props.displayName !== nextProps.displayName ||\n      this.props.hasError !== nextProps.hasError ||\n      this.props.readOnly !== nextProps.readOnly\n    )\n  }\n\n  onChange(event) {\n    const { onChange } = this.props\n    const value = event.target.value\n    this.setState({\n      value: value\n    })\n\n    if (onChange) {\n      onChange(value)\n    }\n  }\n\n  render() {\n    const { classes, className, guid, hasError, readOnly } = this.props\n\n    const {\n      name,\n      displayName,\n      variant,\n      underline,\n      displayNamePosition,\n      mask,\n      disableAutoComplete\n    } = this.props\n\n    const { value } = this.state\n\n    const inputProps = {\n      inputComponent: PhoneMask,\n      inputProps: {\n        value: value || '',\n        mask: mask,\n        onChange: this.onChange\n      }\n    }\n    if (variant === InputVariantFilled) {\n      inputProps.disableUnderline = !underline\n    }\n\n    return (\n      <React.Fragment>\n        {displayNamePosition === InputLabelDisplayModeAbove && (\n          <FormLabel htmlFor={guid} error={hasError}>\n            {`${displayName}:`}\n          </FormLabel>\n        )}\n        <MaterialTextField\n          className={clsx(classes.root, className)}\n          id={guid}\n          fullWidth\n          error={hasError}\n          InputProps={inputProps}\n          type={TextFieldTypePhone}\n          name={disableAutoComplete ? guid : name}\n          label={\n            displayNamePosition === InputLabelDisplayModeInside\n              ? displayName\n              : undefined\n          }\n          variant={variant}\n          disabled={readOnly}\n        />\n      </React.Fragment>\n    )\n  }\n}\n\nPhoneField.propTypes = {\n  variant: PropTypes.oneOf([\n    InputVariantStandard,\n    InputVariantOutlined,\n    InputVariantFilled\n  ]),\n  displayNamePosition: PropTypes.oneOf([\n    InputLabelDisplayModeAbove,\n    InputLabelDisplayModeInside\n  ]),\n  readOnly: PropTypes.bool,\n  displayName: PropTypes.string,\n  mask: PropTypes.array.isRequired,\n  value: PropTypes.string\n}\n\nPhoneField.defaultProps = {\n  variant: InputVariantOutlined,\n  displayNamePosition: InputLabelDisplayModeInside,\n  underline: true,\n  readOnly: false\n}\nexport default compose(withGuid, withHelperText, withStyles(styles))(PhoneField)\n","import React from 'react'\nimport { SvgIcon } from '@material-ui/core'\nimport clsx from 'clsx'\nimport { withStyles } from '@material-ui/styles'\n\nconst styles = (theme) => ({\n  root: {\n    width: 24,\n    height: 24,\n    fill: 'transparent'\n  }\n})\n\nclass IcOpenedEye extends React.Component {\n  render() {\n    const { classes, className } = this.props\n\n    return (\n      <SvgIcon className={clsx(classes.root, className)} viewBox='0 0 24 24'>\n        <path\n          d='M12 4.5C7 4.5 2.73 7.61 1 12C2.73 16.39 7 19.5 12 19.5C17 19.5 21.27 16.39 23 12C21.27 7.61 17 4.5 12 4.5ZM12 17C9.24 17 7 14.76 7 12C7 9.24 9.24 7 12 7C14.76 7 17 9.24 17 12C17 14.76 14.76 17 12 17ZM12 9C10.34 9 9 10.34 9 12C9 13.66 10.34 15 12 15C13.66 15 15 13.66 15 12C15 10.34 13.66 9 12 9Z'\n          fill='#858585'\n        />\n      </SvgIcon>\n    )\n  }\n}\n\nexport default withStyles(styles)(IcOpenedEye)\n","import React from 'react'\nimport { SvgIcon } from '@material-ui/core'\nimport clsx from 'clsx'\nimport { withStyles } from '@material-ui/styles'\n\nconst styles = (theme) => ({\n  root: {\n    width: 24,\n    height: 24,\n    fill: 'transparent'\n  }\n})\n\nclass IcClosedEye extends React.Component {\n  render() {\n    const { classes, className } = this.props\n\n    return (\n      <SvgIcon className={clsx(classes.root, className)} viewBox='0 0 24 24'>\n        <path\n          d='M12 7C14.76 7 17 9.24 17 12C17 12.65 16.87 13.26 16.64 13.83L19.56 16.75C21.07 15.49 22.26 13.86 22.99 12C21.26 7.61 16.99 4.5 11.99 4.5C10.59 4.5 9.25 4.75 8.01 5.2L10.17 7.36C10.74 7.13 11.35 7 12 7ZM2 4.27L4.28 6.55L4.74 7.01C3.08 8.3 1.78 10.02 1 12C2.73 16.39 7 19.5 12 19.5C13.55 19.5 15.03 19.2 16.38 18.66L16.8 19.08L19.73 22L21 20.73L3.27 3L2 4.27ZM7.53 9.8L9.08 11.35C9.03 11.56 9 11.78 9 12C9 13.66 10.34 15 12 15C12.22 15 12.44 14.97 12.65 14.92L14.2 16.47C13.53 16.8 12.79 17 12 17C9.24 17 7 14.76 7 12C7 11.21 7.2 10.47 7.53 9.8V9.8ZM11.84 9.02L14.99 12.17L15.01 12.01C15.01 10.35 13.67 9.01 12.01 9.01L11.84 9.02Z'\n          fill='#858585'\n        />\n      </SvgIcon>\n    )\n  }\n}\n\nexport default withStyles(styles)(IcClosedEye)\n","// https://material-ui.com/api/text-field/\n\nimport React from 'react'\nimport clsx from 'clsx'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/styles'\nimport { compose } from 'recompose'\nimport withGuid from './hocs/with_guid.js'\nimport withHelperText from './hocs/with_helper_text.js'\n\nimport {\n  TextField as MaterialTextField,\n  FormLabel,\n  IconButton\n} from '@material-ui/core'\n\nimport IcOpenedEye from './resources/icons/ic_opened_eye.js'\nimport IcClosedEye from './resources/icons/ic_closed_eye.js'\n\nimport {\n  InputVariantStandard,\n  InputVariantOutlined,\n  InputVariantFilled,\n  InputLabelDisplayModeInside,\n  InputLabelDisplayModeAbove\n} from './constants.js'\n\nconst styles = (theme) => ({\n  container: {\n    position: 'relative'\n  },\n  root: {},\n  withEye: {\n    '& .MuiInputBase-input': {\n      paddingRight: '54px'\n    }\n  },\n  label: {\n    display: 'block'\n  },\n  eye: {\n    position: 'absolute',\n    top: '13%',\n    right: '12px'\n  }\n})\n\nclass PasswordField extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.onChange = this.onChange.bind(this)\n    this.onEyeClicked = this.onEyeClicked.bind(this)\n\n    this.state = {\n      passwordShowing: false\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    let value\n\n    const propsValue = `${props.value || ''}`\n    let defaultValue = `${state.defaultValue || ''}`\n    const stateValue = `${state.value || ''}`\n\n    if (defaultValue !== propsValue) {\n      defaultValue = propsValue\n      value = propsValue\n    } else {\n      value = stateValue\n    }\n\n    return {\n      value: value,\n      defaultValue: defaultValue,\n      disableShowPassword: props.disableShowPassword\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      this.state.value !== nextState.value ||\n      this.props.displayName !== nextProps.displayName ||\n      this.state.passwordShowing !== nextState.passwordShowing ||\n      this.props.hasError !== nextProps.hasError ||\n      this.props.readOnly !== nextProps.readOnly ||\n      this.state.disableShowPassword !== nextState.disableShowPassword\n    )\n  }\n\n  onEyeClicked() {\n    const { passwordShowing } = this.state\n    this.setState({\n      passwordShowing: !passwordShowing\n    })\n  }\n\n  onChange(event) {\n    const { onChange } = this.props\n    const value = event.target.value\n    this.setState({\n      value: value\n    })\n\n    if (onChange) {\n      onChange(value)\n    }\n  }\n\n  render() {\n    const { classes, className, guid, hasError, readOnly } = this.props\n\n    const {\n      name,\n      displayName,\n      variant,\n      underline,\n      displayNamePosition,\n      disableAutoComplete\n    } = this.props\n\n    const { value, passwordShowing, disableShowPassword } = this.state\n\n    const inputProps = {}\n    if (variant === InputVariantFilled) {\n      inputProps.disableUnderline = !underline\n    }\n\n    return (\n      <React.Fragment>\n        {displayNamePosition === InputLabelDisplayModeAbove && (\n          <FormLabel htmlFor={guid} error={hasError}>\n            {`${displayName}:`}\n          </FormLabel>\n        )}\n        <div className={classes.container}>\n          <MaterialTextField\n            className={clsx({\n              [classes.root]: true,\n              [className]: true,\n              [classes.withEye]: !disableShowPassword\n            })}\n            id={guid}\n            fullWidth\n            error={hasError}\n            InputProps={inputProps}\n            type={passwordShowing ? 'text' : 'password'}\n            name={disableAutoComplete ? guid : name}\n            label={\n              displayNamePosition === InputLabelDisplayModeInside\n                ? displayName\n                : undefined\n            }\n            variant={variant}\n            value={value || ''}\n            onChange={this.onChange}\n            disabled={readOnly}\n          />\n          <IconButton className={classes.eye} onClick={this.onEyeClicked}>\n            {!disableShowPassword && passwordShowing && <IcOpenedEye />}\n            {!disableShowPassword && !passwordShowing && <IcClosedEye />}\n          </IconButton>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nPasswordField.propTypes = {\n  variant: PropTypes.oneOf([\n    InputVariantStandard,\n    InputVariantOutlined,\n    InputVariantFilled\n  ]),\n  displayNamePosition: PropTypes.oneOf([\n    InputLabelDisplayModeAbove,\n    InputLabelDisplayModeInside\n  ]),\n  readOnly: PropTypes.bool,\n  disableShowPassword: PropTypes.bool\n}\n\nPasswordField.defaultProps = {\n  variant: InputVariantOutlined,\n  displayNamePosition: InputLabelDisplayModeInside,\n  underline: true,\n  readOnly: false,\n  disableShowPassword: false\n}\n\nexport default compose(\n  withGuid,\n  withHelperText,\n  withStyles(styles)\n)(PasswordField)\n","import React from 'react'\nimport './index.css'\nimport { Grid } from '@material-ui/core';\nimport {\n  Checkbox,\n  DateTimeField,\n  ImageField, FileField,\n  SelectField, RemoteSelectField,\n  TextField, DecimalField, PhoneField, PasswordField \n} from 'react-material-fields'\n\nconst App = () => {\n  const selectData = [\n    {\n      key: \"One\",\n      value: \"1\"\n    },\n    {\n      key: \"Two\",\n      value: \"2\"\n    },\n    {\n      key: \"Three\",\n      value: \"3\"\n    },\n    {\n      key: \"Four\",\n      value: \"4\"\n    },\n    {\n      key: \"Five\",\n      value: \"5\"\n    },\n    {\n      key: \"Six\",\n      value: \"6\"\n    },\n    {\n      key: \"Seven\",\n      value: \"7\"\n    }\n  ];\n  const singleSelectValue = {\n    \"id\":2,\n    \"email\":\"janet.weaver@reqres.in\",\n    \"first_name\":\"Janet\",\n    \"last_name\":\"Weaver\",\n    \"avatar\":\"https://s3.amazonaws.com/uifaces/faces/twitter/josephstein/128.jpg\"\n  };\n  const multipleSelectValue = [\n    {\n      \"id\":2,\n      \"email\":\"janet.weaver@reqres.in\",\n      \"first_name\":\"Janet\",\n      \"last_name\":\"Weaver\",\n      \"avatar\":\"https://s3.amazonaws.com/uifaces/faces/twitter/josephstein/128.jpg\"\n    },\n    {\n      \"id\":3,\n      \"email\":\"emma.wong@reqres.in\",\n      \"first_name\":\"Emma\",\n      \"last_name\":\"Wong\",\n      \"avatar\":\"https://s3.amazonaws.com/uifaces/faces/twitter/olegpogodaev/128.jpg\"\n    }\n  ];\n\n  return <div className = \"container\">\n    <h1>React Material Fields</h1>\n    <p>React custom component with Material-UI design.</p>\n    <section className = \"section\">\n      <h3>TextField component</h3>\n      <p>It's a simple text, email, or number input field.</p>\n      <p>Variants of styling (also fo Phone, Password, Decimal, Select and DateTime fields): </p>  \n      <Grid container \n            spacing = {3}\n            alignItems = { \"flex-end\" }>\n        <Grid item md = {4}>\n          <TextField type = { \"text\" }\n                    displayName = { \"standard\" } \n                    variant = { \"standard\" }/>\n        </Grid>\n        <Grid item md = {4}>\n          <TextField type = { \"text\" }\n                    displayName = { \"filled\" } \n                    variant = { \"filled\" }/>\n        </Grid>\n        <Grid item md = {4}>\n          <TextField type = { \"text\" }\n                    displayName = { \"outlined\" } \n                    variant = { \"outlined\" }/>\n        </Grid>\n      </Grid>\n      <p>Name displaying (also fo Phone, Password, Decimal, Select and DateTime fields): </p>\n      <Grid container \n            spacing = {3}\n            alignItems = { \"flex-end\" }>\n        <Grid item md = {4}>\n          <TextField type = { \"text\" }\n                    displayName = { \"above\" }\n                    displayNamePosition = { \"above\" } />\n        </Grid>\n        <Grid item md = {4}>\n          <TextField type = { \"text\" }\n                    displayName = { \"inside\" }\n                    displayNamePosition = { \"inside\" } />\n        </Grid>\n      </Grid>  \n      <p>Read only disabling (also fo Phone, Password, Decimal, Select and DateTime fields): </p>\n      <Grid container \n            spacing = {3}\n            alignItems = { \"flex-end\" }>\n        <Grid item md = {4}>\n          <TextField type = { \"text\" }\n                    displayName = { \"Read only\" }\n                    readOnly = { true } />\n        </Grid>\n      </Grid>  \n      <p>Error (also fo Phone, Password, Decimal, Select and DateTime fields): </p>\n      <Grid container \n            spacing = {3}\n            alignItems = { \"flex-end\" }>\n        <Grid item md = {4}>\n          <TextField type = { \"text\" }\n                    displayName = { \"Error\" }\n                    hasError = { true } />\n        </Grid>\n      </Grid>  \n      <p>Capitalization: </p>\n      <Grid container \n            spacing = {3}\n            alignItems = { \"flex-end\" }>\n        <Grid item md = {4}>\n          <TextField type = { \"text\" }\n                    displayName = { \"capitalize\" }\n                    capitalization = { \"capitalize\" } />\n        </Grid>\n        <Grid item md = {4}>\n          <TextField type = { \"text\" }\n                    displayName = { \"lowercase\" }\n                    capitalization = { \"lowercase\" } />\n        </Grid>\n        <Grid item md = {4}>\n          <TextField type = { \"text\" }\n                    displayName = { \"uppercase\" }\n                    capitalization = { \"uppercase\" } />\n        </Grid>\n      </Grid>    \n      <p>Types: </p>\n      <Grid container \n            spacing = {3}\n            alignItems = { \"flex-end\" }>\n        <Grid item md = {4}>\n          <TextField type = { \"email\" }\n                    displayName = { \"email\" } />\n        </Grid>\n        <Grid item md = {4}>\n          <TextField type = { \"number\" }\n                    displayName = { \"number\" }\n                    capitalization = { \"lowercase\" } />\n        </Grid>\n        <Grid item md = {4}>\n          <TextField type = { \"text\" }\n                    displayName = { \"text\" } \n                    underline = { false } />\n        </Grid>\n      </Grid>    \n      <p>Multiline rows (also for Decimal field): </p>\n      <Grid container \n            spacing = {3}\n            alignItems = { \"flex-end\" }>\n        <Grid item md = {4}>\n          <TextField type = { \"text\" }\n                    displayName = { \"Multiple rows\" } \n                    multiline = { true }\n                    rows = { 4 }/>\n        </Grid>\n      </Grid>    \n    </section>\n    <section className = \"section\">\n      <h3>PhoneField component</h3>\n      <p>Input field with phone number mask.</p>\n      <Grid container \n            spacing = {3}\n            alignItems = { \"flex-end\" }>\n        <Grid item md = {4}>\n          <PhoneField displayName = { \"Phone field\" } \n                      mask = { ['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/] }\n                      value = { '(123) 456-78-90' }/>\n        </Grid>\n      </Grid>    \n    </section>\n    <section className = \"section\">\n      <h3>PasswordField component</h3>\n      <p>Password field with toggle password visibility.</p>\n      <Grid container \n            spacing = {3}\n            alignItems = { \"flex-end\" }>\n        <Grid item md = {4}>\n          <PasswordField displayName = { \"Password field\" }\n                         autocomplete = { \"off\" } \n                         disableAutoComplete = { true }\n                         value = { \"dontwatchthis!\" } />\n        </Grid>\n      </Grid>    \n    </section>    \n    <section className = \"section\">\n      <h3>DecimalField component</h3>\n      <p>\n        Number field with special formatting. It has two number options: precision (length of number) and scale (length after point).<br/> \n        Also you can set decimal separator, thousand separator and prefix/suffix string.\n      </p>\n      <Grid container \n            spacing = {3}\n            alignItems = { \"flex-end\" }>\n        <Grid item md = {4}>\n          <DecimalField displayName = { \"Prefix\" }\n                        displayNamePosition = { \"above\" } \n                        prefix = { \"£\" }\n                        precision = { 12 }\n                        scale = { 2 } />\n        </Grid>\n        <Grid item md = {4}>\n          <DecimalField displayName = { \"Suffix\" }\n                        displayNamePosition = { \"above\" } \n                        suffix = { \"$\" }\n                        precision = { 12 }\n                        scale = { 2 } />\n        </Grid>\n      </Grid>\n    </section>\n    <section className = \"section\">\n      <h3>DateTimeField component</h3>\n      <p>\n        Simple datepicker field.<br/>\n        You can set format, locale, utcOffset, minDate, maxDate, serverDateFormat, serverDateTimeFormat.\n      </p>\n      <Grid container \n            spacing = {3}\n            alignItems = { \"flex-end\" }>\n        <Grid item md = {4}>\n          <DateTimeField />\n        </Grid>      \n      </Grid>        \n    </section>    \n    <section className = \"section\">\n      <h3>Checkbox component</h3>\n      <p>\n        Just checkbox :)\n      </p>\n      <Grid container \n            spacing = {3}\n            alignItems = { \"flex-end\" }>\n        <Grid item md = {4}>\n          <Checkbox displayName = \"Placement end and checked\"\n                    checked = { true }\n                    placement = { \"end\" }/>\n        </Grid>    \n        <Grid item md = {4}>\n          <Checkbox displayName = \"Placement start\"\n                    placement = { \"start\" }/>\n        </Grid>   \n      </Grid>        \n    </section>   \n    <section className = \"section\">\n      <h3>SelectField component</h3>\n      <p>\n        Custom select.\n      </p>\n      <Grid container \n            spacing = {3}\n            alignItems = { \"flex-end\" }>\n        <Grid item md = {4}>\n          <SelectField data = { selectData }\n                       displayName = { \"Multiple choosing\" } \n                       multiple = { true } \n                       allowClear = { false }/>\n        </Grid>    \n        <Grid item md = {4}>\n        <SelectField data = { selectData }\n                     displayName = { \"All option\" } \n                     allowClear = { true } />\n        </Grid>   \n      </Grid>        \n    </section>    \n    <section className = \"section\">\n      <h3>RemoteSelectField component</h3>\n      <p>\n        Custom select with remote data and searching field.\n      </p>\n      <Grid container \n            spacing = {3}\n            alignItems = { \"flex-end\" }>\n        <Grid item md = {4}>\n          <RemoteSelectField multiple = { true }\n                             displayName = { \"Multiple select\" } \n                             optionDisplayName = { (option) => {\n                              const { first_name, last_name } = option;\n                              return `${first_name} ${last_name}`;\n                             }}\n                             value = { multipleSelectValue }\n                             onChange = { (value) => {\n                              console.log(value)\n                             }}\n                             downloader = { (searchQuery, selectedValueIds) => {\n                             const params = {\n                              query: searchQuery,\n                              valueIds: selectedValueIds\n                             }\n                             const url = new URL(\"https://reqres.in/api/users\");\n                             Object.keys(params).forEach(key => url.searchParams.append(key, encodeURIComponent(params[key])));\n\n                             return fetch(url).then((response) => response.json())\n                                              .then((response) => {\n                                                const { data } = response;\n                                                return data;\n                             });\n          } }/>\n        </Grid>    \n        <Grid item md = {4}>\n          <RemoteSelectField allowClear = { true }\n                             displayName = { \"Single select\" } \n                             optionDisplayName = { (option) => {\n                              const { first_name, last_name } = option;\n                              return `${first_name} ${last_name}`;\n                             }}\n                             value = { singleSelectValue }\n                             onChange = { (value) => {\n                              console.log(value)\n                             }}\n                             downloader = { (searchQuery, selectedValueIds) => {\n                             const params = {\n                              query: searchQuery,\n                              valueIds: selectedValueIds\n                             }\n                             const url = new URL(\"https://reqres.in/api/users\");\n                             Object.keys(params).forEach(key => url.searchParams.append(key, encodeURIComponent(params[key])));\n\n                             return fetch(url).then((response) => response.json())\n                                              .then((response) => {\n                                                const { data } = response;\n                                                return data;\n                             });\n          } }/>\n        </Grid>      \n      </Grid>        \n    </section>\n    <section className = \"section\">\n      <h3>ImageField component</h3>\n      <p>\n        Image File uploader.\n      </p>\n      <Grid container \n            spacing = {3}\n            alignItems = { \"flex-end\" }>\n        <Grid item md = {4}>\n          <ImageField uploader = {() => Promise.resolve() } />\n        </Grid>\n      </Grid>  \n    </section>      \n    <section className = \"section\">\n      <h3>FileField component</h3>\n      <p>\n        File uploader.\n      </p>\n      <Grid container \n            spacing = {3}\n            alignItems = { \"flex-end\" }>\n        <Grid item md = {4}>\n          <FileField uploader = {() => Promise.resolve() } />\n        </Grid>\n      </Grid>  \n    </section>      \n  </div>\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}